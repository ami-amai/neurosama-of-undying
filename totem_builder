#!/bin/sh

# Start of note
# 
#
#
#
#
#
#
#
#
#
#
#
#
# End of note

# Build values
tmp_path="tmp/"
tmp="$tmp_path.tmp"

# Colors
cclr="\e[0m"
cred="\e[91m"
cylw="\e[93m"
cgrn="\e[92m"
cbl="\e[94m"
ccn="\e[96m"
cmgt="\e[95m"
cgr="\e[90m"

lcolors=(red yellow green aqua blue light_purple white gray)
dcolors=(dark_red gold dark_green dark_aqua dark_blue dark_purple black dark_gray)

# Assets paths
models_path="models/"
icons_path="icons/"
versions=(34 32 22 18 15 13 12 9 8 7 6 5 4 3)

# Zip paths
icon="pack.png"
meta="pack.mcmeta"
lang="assets/minecraft/lang/"

texture_path="assets/minecraft/textures/item/"
id="totem_of_undying"

mkdir -p $tmp_path
# Functions

version_stage () {

# Set version and mcversion
PS3="Send pack format version : "
select version in ${versions[@]}; do
case "$version" in
"34") mcversion="1.21";;
"32") mcversion="1.20.5";;
"22") mcversion="1.20.3-1.20.4";;
"18") mcversion="1.20.2";;
"15") mcversion="1.20-1.20.1";;
"13") mcversion="1.19.4";;
"12") mcversion="1.19.3";;
"9") mcversion="1.19-1.19.2";;
"8") mcversion="1.18-1.18.2";;
"7") mcversion="1.17-1.17.1";;
"6") mcversion="1.16.2-1.16.5";;
"5") mcversion="1.15-1.16.1";;
"4") mcversion="1.13-1.14.4";;
"3") mcversion="1.11-1.12.2";;
esac; break
done
echo "version=$version" > .totem_builder
echo "mcversion=$mcversion" >> .totem_builder

# Changes for versions
## Id of totem
if [[ $version == 3 ]]; then
id="totem"
else
""
fi

# Path to texture
if [[ $version > 4 || $version == 4 ]]; then
texture_path="assets/minecraft/textures/items/"
else
""
fi

}

color_stage () {

# Set color for pack.mcmeta
PS3="Select resourcepack color : "
select color in ${lcolors[@]} ${dcolors[@]}; do
	break
done
printf "${cclr}"

echo "color=$color" >> .totem_builder


}

model_stage () {

# Select texture for totem
echo "models=(" > $tmp; dir $models_path >> $tmp; echo ")" >> $tmp
source $tmp

PS3="Select model name :"
select model in ${models[@]}; do
break; done

echo "model=$model" >> .totem_builder

}

texture_stage () {

# texture
textures_path="$models_path$model/"

echo "textures=(" > $tmp; dir $textures_path >> $tmp; echo ")" >> $tmp
source $tmp

PS3="Select texture : "
select texture in ${textures[@]}; do
	break
done

echo "texture=$texture" >> .totem_builder

}

new_config () {
echo "" > .totem_builder

version_stage
color_stage
model_stage
texture_stage

echo "$version $mcversion $texture_path $totemid"
# color of pack

cat .totem_builder
}

load_config () {
source ./.totem_builder
}

create_meta () {
echo "{
 \"pack\": {
  \"pack_format\": $version,
  \"description\": [
	{\"text\":\"$model of Undying\",\"color\":\"$color\"},
	{\"text\":\"\nby Ami Amai\",\"color\":\"gray\"}
	]
  }
}" > $tmp_path$meta
}

create_lang () {
echo "{
 \"item.minecraft.$id\": \"$model of Undying\" 
}" > $tmp_path$lang"en_us.json"
}

# Script

PS3="Do u want to laod latest config? : "
select load in "Yes" "No"; do
	if [[ $load == "Yes" ]]; then
		load_config
	else
		new_config
	fi
	break
done

# Prepair dirs
mkdir -p $tmp_path$lang
mkdir -p $tmp_path$texture_path
mkdir -p "resourcepacks/$model/$mcversion/$pack"

# Generate pack

create_meta
create_lang
cp -r $icons_path$model"/"$texture $tmp_path$icon
cp -r $models_path$model"/"$texture $tmp_path$texture_path"$totemid.png"

cd $tmp_path
pack="$model-of-Undying_$mcversion.zip"
zip -0 -r -m $pack "assets/" $meta $icon
cd ..

cp $tmp_path$pack "resourcepacks/$model/$mcversion/$pack"

# pack.mcmeta
# assets/minecraft/lang/en_us.json
# pack.png
# assets/minecraft/textures/item/totem_of_undying.png










